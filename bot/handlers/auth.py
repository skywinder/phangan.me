import base64
from telegram import Update, ParseMode
from telegram.ext import CallbackContext

from bot.cache import flush_users_cache, cached_telegram_users
from users.models.user import User


def command_auth(update: Update, context: CallbackContext) -> None:
    if not update.message or not update.message.text or " " not in update.message.text:
        update.effective_chat.send_message(
            "‚òùÔ∏è –ù—É–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –º–Ω–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥. "
            "–ù–∞–ø–∏—à–∏ /auth –∏ –∫–æ–¥ –∏–∑ <a href=\"https://phangan.me/user/me/edit/bot/\">–ø—Ä–æ—Ñ–∏–ª—è –≤ –ö–ª—É–±–µ</a> "
            "—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. –¢–æ–ª—å–∫–æ –Ω–µ –ø—É–±–ª–∏–∫—É–π –µ–≥–æ –≤ –ø—É–±–ª–∏—á–Ω—ã—Ö —á–∞—Ç–∞—Ö!",
            parse_mode=ParseMode.HTML
        )
        return None

    secret_code = update.message.text.split(" ", 1)[1].strip()
    secret_code = base64.urlsafe_b64decode(secret_code).decode('utf-8')
    user = User.objects.filter(secret_hash=secret_code).first()

    if not user:
        update.effective_chat.send_message("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None

    user.telegram_id = update.effective_user.id
    user.telegram_data = {
        "id": update.effective_user.id,
        "username": update.effective_user.username,
        "first_name": update.effective_user.first_name,
        "last_name": update.effective_user.last_name,
        "language_code": update.effective_user.language_code,
    }
    user.save()

    update.effective_chat.send_message(f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {user.slug}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü–∞–Ω–≥–∞–Ωüèù–ö–ª—É–±!")
    update.message.delete()

    # Refresh the cache by deleting and requesting it again
    flush_users_cache()
    cached_telegram_users()

    return None
